// import {
//   OrbitControls,
//   Stats,
//   PerspectiveCamera,
//   useFrame,
// } from "@react-three/drei";
// import { Canvas, useLoader } from "@react-three/fiber";
// import React, { Suspense, useEffect, useMemo, useRef, useState } from "react";
// import Scene from "./Scene";
// import { folder, button, useControls } from "leva";
// import { CameraHelper } from "three";

// function CameraAnimation({ cameraRef }) {
//   // useFrame(({ clock }) => {
//   //   const zPosition = Math.sin(clock.elapsedTime * 0.001) * 50;
//   //   cameraRef.current.position.set(0, 0, zPosition);
//   // });

//   return null;
// }

// export default function Preview() {
//   const canvasRef = useRef(null);
//   const cameraRef = useRef();
//   const [sizes, setSizes] = useState({});
//   const sceneRef = useRef();

//   const options = useMemo(() => {
//     return {
//       x: { value: 0, min: -100, max: 300, step: 0.01 },
//       y: { value: 0, min: -100, max: 300, step: 0.01 },
//       z: { value: 0, min: -100, max: 300, step: 0.01 },
//       visible: true,
//       color: { value: "lime" },
//     };
//   }, []);
//   const pA = useControls("Scene Position", options);

//   useEffect(() => {
//     const sizes = {
//       width: window.innerWidth,
//       height: window.innerHeight,
//     };
//     setSizes(sizes);

//     return () => {};
//   }, []);

//   return (
//     <Canvas
//       ref={canvasRef}
//       shadows
//       style={{ width: "100%", height: "80vh" }}
//       gl={{ preserveDrawingBuffer: true, pixelRatio: 1 }}
//     >
//       <fog attach="fog" args={["white", 0, 40]} />

//       {/* Use the CameraAnimation component */}
//       <CameraAnimation cameraRef={cameraRef} />

//       <Suspense fallback={null}>
//         <Scene />

//         <ambientLight intensity={0.1} />
//         <directionalLight
//           theatreKey="dirLight"
//           intensity={0.5}
//           castShadow
//           shadow-mapSize-height={512}
//           shadow-mapSize-width={512}
//           color="white"
//         />

//         <OrbitControls />
//       </Suspense>

//       <PerspectiveCamera ref={cameraRef} makeDefault position={[0, 0, 100]} />
//     </Canvas>
//   );
// }
